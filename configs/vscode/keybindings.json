[
	{
		"key": "ctrl+b",
		"command": "-cursorLeft",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+f",
		"command": "-cursorRight",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+p",
		"command": "-cursorUp",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+n",
		"command": "-cursorDown",
		"when": "textInputFocus"
	},
	{
		"key": "alt+left",
		"command": "cursorWordPartLeft",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+alt+left",
		"command": "-cursorWordPartLeft",
		"when": "textInputFocus"
	},
	{
		"key": "alt+right",
		"command": "cursorWordPartRight",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+alt+right",
		"command": "-cursorWordPartRight",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+alt+left",
		"command": "cursorWordEndLeft",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+alt+right",
		"command": "cursorWordEndRight",
		"when": "textInputFocus"
	},
	{
		"key": "alt+right",
		"command": "-cursorWordEndRight",
		"when": "textInputFocus"
	},
	{
		"key": "alt+up",
		"command": "editor.action.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+cmd+up",
		"command": "-editor.action.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+down",
		"command": "editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+cmd+down",
		"command": "-editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+l",
		"command": "-expandLineSelection",
		"when": "textInputFocus"
	},
	{
		"key": "cmd+l",
		"command": "workbench.action.gotoLine"
	},
	{
		"key": "ctrl+g",
		"command": "-workbench.action.gotoLine"
	},
	{
		"key": "cmd+0",
		"command": "-workbench.action.focusSideBar"
	},
	{
		"key": "cmd+0",
		"command": "workbench.action.toggleSidebarVisibility"
	},
	{
		"key": "cmd+b",
		"command": "-workbench.action.toggleSidebarVisibility"
	},
	{
		"key": "cmd+b",
		"command": "editor.action.goToDeclaration",
		"when": "editorHasDefinitionProvider && editorTextFocus"
	},
	{
		"key": "cmd+[",
		"command": "-editor.action.outdentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+]",
		"command": "-editor.action.indentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+[",
		"command": "workbench.action.navigateBack"
	},
	{
		"key": "ctrl+-",
		"command": "-workbench.action.navigateBack"
	},
	{
		"key": "cmd+]",
		"command": "workbench.action.navigateForward"
	},
	{
		"key": "ctrl+shift+-",
		"command": "-workbench.action.navigateForward"
	},
	{
		"key": "cmd+o",
		"command": "-workbench.action.files.openFileFolder"
	},
	{
		"key": "cmd+o",
		"command": "workbench.action.gotoSymbol",
		"when": "editorFocus"
	},
	{
		"key": "shift+cmd+o",
		"command": "-workbench.action.gotoSymbol"
	},
	{
		"key": "cmd+k cmd+1",
		"command": "-editor.foldLevel1",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+2",
		"command": "-editor.foldLevel2",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+3",
		"command": "-editor.foldLevel3",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+4",
		"command": "-editor.foldLevel4",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+5",
		"command": "-editor.foldLevel5",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+6",
		"command": "-editor.foldLevel6",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+7",
		"command": "-editor.foldLevel7",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+8",
		"command": "-editor.foldAllMarkerRegions",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+9",
		"command": "-editor.unfoldAllMarkerRegions",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+-",
		"command": "-workbench.action.zoomOut"
	},
	{
		"key": "cmd+-",
		"command": "editor.fold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "alt+cmd+[",
		"command": "-editor.fold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+=",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "cmd+=",
		"command": "editor.unfold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "alt+cmd+]",
		"command": "-editor.unfold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+-",
		"command": "editor.foldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+[",
		"command": "-editor.foldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+=",
		"command": "editor.unfoldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+]",
		"command": "-editor.unfoldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "alt+cmd+-",
		"command": "editor.foldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+0",
		"command": "-editor.foldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "alt+cmd+=",
		"command": "editor.unfoldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "cmd+k cmd+j",
		"command": "-editor.unfoldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "shift+alt+left",
		"command": "cursorWordPartLeftSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+alt+left",
		"command": "-cursorWordPartLeftSelect",
		"when": "textInputFocus"
	},
	{
		"key": "shift+alt+right",
		"command": "cursorWordPartRightSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+alt+right",
		"command": "-cursorWordPartRightSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+alt+right",
		"command": "cursorWordEndRightSelect",
		"when": "textInputFocus"
	},
	{
		"key": "shift+alt+right",
		"command": "-cursorWordEndRightSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+alt+left",
		"command": "cursorWordStartLeftSelect",
		"when": "textInputFocus"
	},
	{
		"key": "shift+alt+left",
		"command": "-cursorWordStartLeftSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+cmd+g",
		"command": "editor.action.selectHighlights",
		"when": "editorFocus"
	},
	{
		"key": "shift+cmd+l",
		"command": "-editor.action.selectHighlights",
		"when": "editorFocus"
	},
	{
		"key": "cmd+d",
		"command": "-editor.action.addSelectionToNextFindMatch",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+g",
		"command": "editor.action.addSelectionToNextFindMatch",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+shift+g",
		"command": "editor.action.addSelectionToPreviousFindMatch"
	},
	{
		"key": "ctrl+shift+g",
		"command": "-workbench.view.scm",
		"when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "ctrl+shift+g",
		"command": "-workbench.view.scm"
	},
	{
		"key": "ctrl+shift+cmd+right",
		"command": "-editor.action.smartSelect.expand",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+cmd+left",
		"command": "-editor.action.smartSelect.shrink",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+backspace",
		"command": "-deleteLeft",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+h",
		"command": "-deleteLeft",
		"when": "textInputFocus"
	},
	{
		"key": "shift+backspace",
		"command": "-deleteLeft",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+alt+backspace",
		"command": "deleteWordLeft",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "alt+backspace",
		"command": "-deleteWordLeft",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+alt+backspace",
		"command": "workbench.action.terminal.deleteWordLeft",
		"when": "terminalFocus"
	},
	{
		"key": "alt+backspace",
		"command": "-workbench.action.terminal.deleteWordLeft",
		"when": "terminalFocus"
	},
	{
		"key": "alt+backspace",
		"command": "deleteWordPartLeft",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+alt+backspace",
		"command": "-deleteWordPartLeft",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "cmd+backspace",
		"command": "-deleteAllLeft",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+alt+delete",
		"command": "workbench.action.terminal.deleteWordRight",
		"when": "terminalFocus"
	},
	{
		"key": "alt+delete",
		"command": "-workbench.action.terminal.deleteWordRight",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+alt+delete",
		"command": "deleteWordRight",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "alt+delete",
		"command": "-deleteWordRight",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "alt+delete",
		"command": "deleteWordPartRight",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+alt+delete",
		"command": "-deleteWordPartRight",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "cmd+backspace",
		"command": "editor.action.deleteLines",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "shift+cmd+k",
		"command": "-editor.action.deleteLines",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k",
		"command": "-deleteAllRight",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "cmd+delete",
		"command": "-deleteAllRight",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+delete",
		"command": "-deleteRight",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+d",
		"command": "-deleteRight",
		"when": "textInputFocus"
	},
	{
		"key": "alt+cmd+backspace",
		"command": "-deleteFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "cmd+d",
		"command": "editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+down",
		"command": "-editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+cmd+d",
		"command": "-workbench.view.debug"
	},
	{
		"key": "shift+cmd+d",
		"command": "editor.action.copyLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+up",
		"command": "-editor.action.copyLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+down",
		"command": "editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+down",
		"command": "-editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+up",
		"command": "editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+up",
		"command": "-editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+enter",
		"command": "editor.action.insertLineAfter",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+enter",
		"command": "-editor.action.insertLineAfter",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+cmd+l",
		"command": "toggleFindInSelection",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "alt+cmd+l",
		"command": "-toggleFindInSelection",
		"when": "editorFocus"
	},
	{
		"key": "alt+cmd+l",
		"command": "editor.action.formatDocument",
		"when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+f",
		"command": "-editor.action.formatDocument",
		"when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+cmd+l",
		"command": "editor.action.formatDocument.none",
		"when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorHasDocumentFormattingProvider && !editorReadonly"
	},
	{
		"key": "shift+alt+f",
		"command": "-editor.action.formatDocument.none",
		"when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorHasDocumentFormattingProvider && !editorReadonly"
	},
	{
		"key": "alt+cmd+l",
		"command": "editor.action.formatSelection",
		"when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorHasSelection && editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+k cmd+f",
		"command": "-editor.action.formatSelection",
		"when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+k cmd+c",
		"command": "-editor.action.addCommentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+k cmd+u",
		"command": "-editor.action.removeCommentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+cmd+/",
		"command": "editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+cmd+/",
		"command": "editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+a",
		"command": "-editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+d",
		"command": "editor.action.duplicateSelection",
		"when": "editorHasSelection && editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+cmd+r",
		"command": "editor.action.rename",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "escape",
		"command": "refactorPreview.discard",
		"when": "refactorPreview.enabled && refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview'"
	},
	{
		"key": "shift+escape",
		"command": "refactorPreview.discard",
		"when": "refactorPreview.enabled && refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview'"
	},
	{
		"key": "alt+enter",
		"command": "editor.action.quickFix",
		"when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+.",
		"command": "-editor.action.quickFix",
		"when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+enter",
		"command": "problems.action.showQuickFixes",
		"when": "problemFocus"
	},
	{
		"key": "cmd+.",
		"command": "-problems.action.showQuickFixes",
		"when": "problemFocus"
	},
	{
		"key": "cmd+i",
		"command": "editor.action.showHover",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+k cmd+i",
		"command": "-editor.action.showHover",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+i",
		"command": "editor.debug.action.showDebugHover",
		"when": "editorTextFocus && inDebugMode"
	},
	{
		"key": "cmd+k cmd+i",
		"command": "-editor.debug.action.showDebugHover",
		"when": "editorTextFocus && inDebugMode"
	},
	{
		"key": "cmd+e",
		"command": "-actions.findWithSelection"
	},
	{
		"key": "cmd+r",
		"command": "editor.action.startFindReplaceAction"
	},
	{
		"key": "alt+cmd+f",
		"command": "-editor.action.startFindReplaceAction"
	},
	{
		"key": "cmd+f",
		"command": "filesExplorer.findInFolder",
		"when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
	{
		"key": "shift+alt+f",
		"command": "-filesExplorer.findInFolder",
		"when": "explorerResourceIsFolder && explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
	{
		"key": "alt+cmd+left",
		"command": "-workbench.action.previousEditor"
	},
	{
		"key": "alt+cmd+right",
		"command": "-workbench.action.nextEditor"
	},
	{
		"key": "cmd+k shift+cmd+[",
		"command": "workbench.action.previousEditorInGroup"
	},
	{
		"key": "cmd+k alt+cmd+left",
		"command": "-workbench.action.previousEditorInGroup"
	},
	{
		"key": "cmd+k shift+cmd+]",
		"command": "workbench.action.nextEditorInGroup"
	},
	{
		"key": "cmd+k alt+cmd+right",
		"command": "-workbench.action.nextEditorInGroup"
	},
	{
		"key": "cmd+w",
		"command": "-workbench.action.closeWindow",
		"when": "!editorIsOpen && !multipleEditorGroups"
	},
	{
		"key": "cmd+k cmd+e",
		"command": "workbench.files.action.showActiveFileInExplorer",
		"when": "!inKeybindings"
	},
	{
		"key": "cmd+k cmd+r",
		"command": "-workbench.action.keybindingsReference"
	},
	{
		"key": "cmd+k cmd+r",
		"command": "workbench.action.files.revealActiveFileInWindows"
	},
	{
		"key": "cmd+k r",
		"command": "-workbench.action.files.revealActiveFileInWindows"
	},
	{
		"key": "cmd+1",
		"command": "-workbench.action.focusFirstEditorGroup"
	},
	{
		"key": "cmd+2",
		"command": "-workbench.action.focusSecondEditorGroup"
	},
	{
		"key": "cmd+3",
		"command": "-workbench.action.focusThirdEditorGroup"
	},
	{
		"key": "cmd+4",
		"command": "-workbench.action.focusFourthEditorGroup"
	},
	{
		"key": "cmd+5",
		"command": "-workbench.action.focusFifthEditorGroup"
	},
	{
		"key": "cmd+6",
		"command": "-workbench.action.focusSixthEditorGroup"
	},
	{
		"key": "cmd+7",
		"command": "-workbench.action.focusSeventhEditorGroup"
	},
	{
		"key": "cmd+8",
		"command": "-workbench.action.focusEighthEditorGroup"
	},
	{
		"key": "cmd+9",
		"command": "-workbench.action.lastEditorInGroup"
	},
	{
		"key": "shift+cmd+e",
		"command": "-workbench.view.explorer"
	},
	{
		"key": "cmd+e 1",
		"command": "workbench.action.focusFirstEditorGroup"
	},
	{
		"key": "cmd+e 2",
		"command": "workbench.action.focusSecondEditorGroup"
	},
	{
		"key": "cmd+e 3",
		"command": "workbench.action.focusThirdEditorGroup"
	},
	{
		"key": "cmd+e 4",
		"command": "workbench.action.focusFourthEditorGroup"
	},
	{
		"key": "shift+cmd+f",
		"command": "-workbench.view.search",
		"when": "!searchViewletVisible"
	},
	{
		"key": "shift+cmd+x",
		"command": "-workbench.view.extensions"
	},
	{
		"key": "cmd+]",
		"command": "workbench.view.explorer",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.extensions'"
	},
	{
		"key": "cmd+]",
		"command": "workbench.view.search",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.explorer'"
	},
	{
		"key": "cmd+]",
		"command": "gitlens.views.repositories:scm.focus",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.search'"
	},
	{
		"key": "cmd+]",
		"command": "workbench.view.debug",
		"when": "sideBarFocus && focusedView =~ /^gitlens\\.views\\.repositories/"
	},
	{
		"key": "cmd+]",
		"command": "workbench.view.extension.project-manager",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.debug'"
	},
	{
		"key": "cmd+]",
		"command": "workbench.view.extensions",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.extension.project-manager'"
	},
	{
		"key": "cmd+[",
		"command": "workbench.view.explorer",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.search'"
	},
	{
		"key": "cmd+[",
		"command": "workbench.view.search",
		"when": "sideBarFocus && focusedView =~ /^gitlens\\.views\\.repositories/"
	},
	{
		"key": "cmd+[",
		"command": "gitlens.views.repositories:scm.focus",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.debug'"
	},
	{
		"key": "cmd+[",
		"command": "workbench.view.debug",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.extension.project-manager'"
	},
	{
		"key": "cmd+[",
		"command": "workbench.view.extension.project-manager",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.extensions'"
	},
	{
		"key": "cmd+[",
		"command": "workbench.view.extensions",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.explorer'"
	},
	{
		"key": "cmd+1",
		"command": "workbench.view.explorer"
	},
	{
		"key": "cmd+2",
		"command": "workbench.view.search"
	},
	{
		"key": "cmd+3",
		"command": "gitlens.views.repositories:scm.focus"
	},
	{
		"key": "cmd+4",
		"command": "workbench.view.debug"
	},
	{
		"key": "cmd+5",
		"command": "workbench.view.extension.project-manager"
	},
	{
		"key": "cmd+6",
		"command": "workbench.view.extensions"
	},
	{
		"key": "escape",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "sideBarFocus"
	},
	{
		"key": "shift+escape",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "sideBarFocus"
	},
	{
		"key": "cmd+1",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.explorer'"
	},
	{
		"key": "cmd+2",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.search'"
	},
	{
		"key": "cmd+3",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "sideBarFocus && focusedView =~ /^gitlens\\.views\\.repositories/"
	},
	{
		"key": "cmd+4",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.debug'"
	},
	{
		"key": "cmd+5",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.extension.project-manager'"
	},
	{
		"key": "cmd+6",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.extensions'"
	},
	{
		"key": "shift+cmd+;",
		"command": "-breadcrumbs.focus",
		"when": "breadcrumbsPossible"
	},
	{
		"key": "shift+enter",
		"command": "renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "enter",
		"command": "-renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "cmd+t t",
		"command": "workbench.action.terminal.toggleTerminal"
	},
	{
		"key": "ctrl+`",
		"command": "-workbench.action.terminal.toggleTerminal"
	},
	{
		"key": "cmd+t n",
		"command": "workbench.action.terminal.new"
	},
	{
		"key": "ctrl+shift+`",
		"command": "-workbench.action.terminal.new"
	},
	{
		"key": "cmd+t k",
		"command": "workbench.action.terminal.kill"
	},
	{
		"key": "cmd+t o",
		"command": "workbench.action.quickOpenTerm"
	},
	{
		"key": "cmd+e left",
		"command": "workbench.action.splitEditorLeft"
	},
	{
		"key": "cmd+e right",
		"command": "workbench.action.splitEditorRight"
	},
	{
		"key": "cmd+e up",
		"command": "workbench.action.splitEditorUp"
	},
	{
		"key": "cmd+e down",
		"command": "workbench.action.splitEditorDown"
	},
	{
		"key": "cmd+k e",
		"command": "-workbench.files.action.focusOpenEditorsView",
		"when": "workbench.explorer.openEditorsView.active"
	},
	{
		"key": "cmd+\\",
		"command": "-workbench.action.splitEditor"
	},
	{
		"key": "cmd+k cmd+\\",
		"command": "-workbench.action.splitEditorOrthogonal"
	},
	{
		"key": "ctrl+cmd+1",
		"command": "-workbench.action.moveEditorToFirstGroup"
	},
	{
		"key": "ctrl+cmd+9",
		"command": "-workbench.action.moveEditorToLastGroup"
	},
	{
		"key": "ctrl+cmd+right",
		"command": "-workbench.action.moveEditorToNextGroup"
	},
	{
		"key": "ctrl+cmd+left",
		"command": "-workbench.action.moveEditorToPreviousGroup"
	},
	{
		"key": "cmd+e shift+left",
		"command": "workbench.action.moveEditorToLeftGroup"
	},
	{
		"key": "cmd+e shift+right",
		"command": "workbench.action.moveEditorToRightGroup"
	},
	{
		"key": "cmd+e shift+up",
		"command": "workbench.action.moveEditorToAboveGroup"
	},
	{
		"key": "cmd+e shift+down",
		"command": "workbench.action.moveEditorToBelowGroup"
	},
	{
		"key": "cmd+e cmd+]",
		"command": "workbench.action.focusNextGroup"
	},
	{
		"key": "cmd+e cmd+[",
		"command": "workbench.action.focusPreviousGroup"
	},
	{
		"key": "cmd+u",
		"command": "-cursorUndo",
		"when": "textInputFocus"
	},
	{
		"key": "cmd+u",
		"command": "-cursorUndo",
		"when": "textInputFocus"
	},
	{
		"key": "shift+cmd+o",
		"command": "workbench.action.quickOpen"
	},
	{
		"key": "cmd+p",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "cmd+p",
		"command": "workbench.action.showAllSymbols"
	},
	{
		"key": "cmd+t",
		"command": "-workbench.action.showAllSymbols"
	},
	{
		"key": "shift+cmd+[",
		"command": "workbench.action.previousPanelView",
		"when": "panelFocus"
	},
	{
		"key": "shift+cmd+]",
		"command": "workbench.action.nextPanelView",
		"when": "panelFocus"
	},
	{
		"key": "shift+cmd+e",
		"command": "workbench.action.tasks.runTask"
	},
	{
		"key": "cmd+up",
		"command": "workbench.action.toggleMaximizedPanel",
		"when": "panelFocus"
	},
	{
		"key": "cmd+down",
		"command": "workbench.action.toggleMaximizedPanel",
		"when": "panelFocus"
	},
	{
		"key": "ctrl+l l",
		"command": "turboConsoleLog.displayLogMessage"
	},
	{
		"key": "ctrl+alt+l",
		"command": "-turboConsoleLog.displayLogMessage"
	},
	{
		"key": "ctrl+l c",
		"command": "turboConsoleLog.commentAllLogMessages"
	},
	{
		"key": "shift+alt+c",
		"command": "-turboConsoleLog.commentAllLogMessages"
	},
	{
		"key": "ctrl+l u",
		"command": "turboConsoleLog.uncommentAllLogMessages"
	},
	{
		"key": "shift+alt+u",
		"command": "-turboConsoleLog.uncommentAllLogMessages"
	},
	{
		"key": "ctrl+l d",
		"command": "turboConsoleLog.deleteAllLogMessages"
	},
	{
		"key": "shift+alt+d",
		"command": "-turboConsoleLog.deleteAllLogMessages"
	},
	{
		"key": "alt+m",
		"command": "-extension.minifyJSON"
	},
	{
		"key": "alt+cmd+m",
		"command": "-extension.prettyJSON"
	},
	{
		"key": "cmd+c",
		"command": "-gitlens.views.compare.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.compare/"
	},
	{
		"key": "cmd+c",
		"command": "-gitlens.views.fileHistory.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.fileHistory/"
	},
	{
		"key": "cmd+c",
		"command": "-gitlens.views.lineHistory.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.lineHistory/"
	},
	{
		"key": "cmd+c",
		"command": "-gitlens.views.repositories.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.repositories/"
	},
	{
		"key": "cmd+c",
		"command": "-gitlens.views.search.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.search/"
	},
	{
		"key": "alt+.",
		"command": "-gitlens.diffWithNext",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/ && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "alt+.",
		"command": "-gitlens.diffWithNext",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/ && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "alt+cmd+g .",
		"command": "-gitlens.diffWithNext",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/ && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "alt+cmd+g .",
		"command": "-gitlens.diffWithNext",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/ && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "alt+.",
		"command": "-gitlens.diffWithNextInDiffLeft",
		"when": "editorTextFocus && isInDiffLeftEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/ && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "alt+cmd+g .",
		"command": "-gitlens.diffWithNextInDiffLeft",
		"when": "editorTextFocus && isInDiffLeftEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/ && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "alt+,",
		"command": "-gitlens.diffWithPrevious",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+,",
		"command": "-gitlens.diffWithPrevious",
		"when": "editorTextFocus && isInDiffLeftEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+cmd+g ,",
		"command": "-gitlens.diffWithPrevious",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+cmd+g ,",
		"command": "-gitlens.diffWithPrevious",
		"when": "editorTextFocus && isInDiffLeftEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+,",
		"command": "-gitlens.diffWithPreviousInDiffRight",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+cmd+g ,",
		"command": "-gitlens.diffWithPreviousInDiffRight",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "shift+alt+.",
		"command": "-gitlens.diffWithWorking",
		"when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "alt+cmd+g shift+.",
		"command": "-gitlens.diffWithWorking",
		"when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "shift+alt+,",
		"command": "-gitlens.diffLineWithPrevious",
		"when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+cmd+g shift+,",
		"command": "-gitlens.diffLineWithPrevious",
		"when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+w",
		"command": "-gitlens.diffLineWithWorking",
		"when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+cmd+g w",
		"command": "-gitlens.diffLineWithWorking",
		"when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+/",
		"command": "-gitlens.showCommitSearch",
		"when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "alt+cmd+g /",
		"command": "-gitlens.showCommitSearch",
		"when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "alt+c",
		"command": "-gitlens.showQuickCommitFileDetails",
		"when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "alt+cmd+g c",
		"command": "-gitlens.showQuickCommitFileDetails",
		"when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "shift+alt+h",
		"command": "-gitlens.showQuickRepoHistory",
		"when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "alt+cmd+g shift+h",
		"command": "-gitlens.showQuickRepoHistory",
		"when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "alt+h",
		"command": "-gitlens.showQuickFileHistory",
		"when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "alt+cmd+g h",
		"command": "-gitlens.showQuickFileHistory",
		"when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "alt+-",
		"command": "-gitlens.showLastQuickPick",
		"when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "alt+cmd+g -",
		"command": "-gitlens.showLastQuickPick",
		"when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "alt+s",
		"command": "-gitlens.showQuickRepoStatus",
		"when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "alt+cmd+g s",
		"command": "-gitlens.showQuickRepoStatus",
		"when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "alt+b",
		"command": "-gitlens.toggleFileBlame",
		"when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
	},
	{
		"key": "alt+cmd+g b",
		"command": "-gitlens.toggleFileBlame",
		"when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
	},
	{
		"key": "shift+alt+b",
		"command": "-gitlens.toggleCodeLens",
		"when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "alt+cmd+g shift+b",
		"command": "-gitlens.toggleCodeLens",
		"when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "alt+,",
		"command": "-gitlens.key.alt+,",
		"when": "gitlens:key:,"
	},
	{
		"key": "alt+.",
		"command": "-gitlens.key.alt+.",
		"when": "gitlens:key:."
	},
	{
		"key": "alt+left",
		"command": "-gitlens.key.alt+left",
		"when": "gitlens:key:alt+left"
	},
	{
		"key": "alt+right",
		"command": "-gitlens.key.alt+right",
		"when": "gitlens:key:alt+right"
	},
	{
		"key": "cmd+left",
		"command": "-gitlens.key.ctrl+left",
		"when": "gitlens:key:ctrl+left"
	},
	{
		"key": "cmd+right",
		"command": "-gitlens.key.ctrl+right",
		"when": "gitlens:key:ctrl+right"
	},
	{
		"key": "escape",
		"command": "-gitlens.key.escape",
		"when": "editorTextFocus && gitlens:key:escape && !findWidgetVisible && !isInEmbeddedEditor && !renameInputVisible && !suggestWidgetVisible"
	},
	{
		"key": "left",
		"command": "-gitlens.key.left",
		"when": "gitlens:key:left"
	},
	{
		"key": "right",
		"command": "-gitlens.key.right",
		"when": "gitlens:key:right"
	}
]
